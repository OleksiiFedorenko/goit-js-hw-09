{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAIC,iBAEJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,IAAIC,MAAMC,OAAOJ,EAAOK,QACrBC,KAAK,GACLC,KAAI,CAACC,EAAGC,IAAML,OAAON,EAAMO,OAASI,EAAIL,OAAOL,EAAKM,SACpDK,SAAQ,CAACC,EAAGF,IASjB,SAAuBG,EAAUd,GAC/B,OAAO,IAAIe,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAAeF,EAAQ,qBAAqBF,QAAed,OAC1DiB,EAAO,oBAAoBH,QAAed,MAAU,GACxDA,EAAM,G,CAfPsB,CAAcX,EAAI,EAAGE,GAClBU,KAAK9B,EAAA+B,OAAOC,SACZC,MAAMjC,EAAA+B,OAAOG,WAGpB7B,EAAIK,cAAcyB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  new Array(Number(amount.value))\n    .fill(0)\n    .map((_, i) => Number(delay.value) + i * Number(step.value))\n    .forEach((d, i) =>\n      createPromise(i + 1, d)\n        .then(Notify.success)\n        .catch(Notify.failure)\n    );\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      else reject(`Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","currentTarget","elements","Array","Number","value","fill","map","_","i","forEach","d","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.de9cc79b.js.map"}